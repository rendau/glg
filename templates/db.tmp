package pg

import (
	"context"
	"database/sql"
    "github.com/jackc/pgtype"
	{{- if .Pr.EntitiesDirPath }}
	"{{ .Pr.Uri }}/{{ .Pr.EntitiesDirPath.Abs }}"
	{{- end }}
)

func (d *St) {{ .EName.Camel }}Get(ctx context.Context, id int64) (*entities.{{ .EName.Camel }}St, error) {
	con := d.getCon(ctx)

	result := &entities.{{ .EName.Camel }}St{}

	pgArr := &pgtype.TextArray{}
	err := con.QueryRowxContext(ctx, `
		select
			{{- range $i, $field := .Ent.MainSt.Fields }}
            t.{{ $field.JsonName }}{{ if lt (inc $i) (len $.Ent.MainSt.Fields) }},{{ end }}
			{{- end }}
		from {{ .EName.Camel | ToLower }} t
		where t.id = $1
	`, id).Scan(
		&result.Id,
		&result.Name,
		&result.Static,
		pgArr,
	)
	if err != nil {
		if err == sql.ErrNoRows {
			return nil, nil
		}
		d.lg.Errorw(ErrMsg, err)
		return nil, err
	}

	return result, nil
}
